{"version":3,"sources":["components/CarItem.js","components/Filter.js","components/CarList.js","components/CarDetail.js","App.js","reportWebVitals.js","index.js"],"names":["CarItem","props","classes","makeStyles","btn","backgroundColor","useStyles","to","id","style","textDecoration","value","vim","className","carModel","Filter","filtersAll","Checkbox","CarList","cars","totalCars","length","totalPages","Math","ceil","useState","currentPage","setCurrentPage","pageNumbers","indexLastCar","indexFirstCar","i","push","handleClick","e","preventDefault","page","currentTarget","Typography","color","variant","map","car","index","vin","model_variant","ButtonGroup","Button","type","onClick","CarDetail","useParams","nextVin","setNextVin","history","useHistory","nextCar","carIndex","findIndex","prevCar","useEffect","Container","maxWidth","Paper","elevation","spacing","fuel_type","engine_size","body_type","regno","doors","transmission_type","App","setCars","axios","get","then","response","data","catch","error","console","log","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd595404.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, makeStyles, Container, Button  } from \"@material-ui/core\";\r\n\r\nconst CarItem = (props) => {\r\n\r\n   \r\n\r\n\r\n    const useStyles= makeStyles({\r\n        btn: {\r\n            \r\n            backgroundColor: \"#037bfc\",\r\n            \r\n        }\r\n    });\r\n\r\n\r\n    const classes = useStyles();\r\n \r\n    return (\r\n        \r\n             <div>\r\n            \r\n            <ul>\r\n            \r\n             <Link \r\n             to={`/cars/${props.id}`}\r\n             style={{ textDecoration: 'none' }}\r\n             >\r\n           \r\n             <li value={props.vim} className={classes.btn}> {props.carModel}</li>\r\n    \r\n             </Link>\r\n            \r\n            </ul>\r\n            \r\n          </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default CarItem;","import React, {useState,} from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst Filter = ({filtersAll}) => {\r\n\r\n    \r\n//    useEffect(()=>{\r\n//        console.log((Object.keys(filtersAll)));\r\n\r\n//    })\r\n\r\n    return (\r\n        <div>\r\n          \r\n           <h1>Filters</h1>\r\n               <Checkbox>\r\n               </Checkbox>\r\n          \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React, {useState, useEffect}  from 'react';\r\nimport CarItem from './CarItem';\r\nimport {Button, ButtonGroup, Typography, Grid} from \"@material-ui/core/\";\r\nimport Filter from \"./Filter\";\r\n\r\n\r\n\r\nconst CarList = ({cars}) => {\r\n  const totalCars = cars.length;\r\n  const carsPerPage = 20;\r\n  const totalPages = Math.ceil(totalCars/carsPerPage);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageNumbers = [];\r\n  const indexLastCar = currentPage * carsPerPage;\r\n  const indexFirstCar = indexLastCar - carsPerPage;\r\n  const [checked, setChecked] = useState(true)\r\n\r\n  for (let i = 1; i<= totalPages; i++){\r\n    pageNumbers.push(i);\r\n  }\r\n\r\nconst handleClick = (e) =>{\r\n  e.preventDefault();\r\n const page = e.currentTarget.value;\r\n setCurrentPage(page);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n      <Typography color=\"primary\" variant =\"h3\">See all our cars!</Typography>\r\n      <Filter\r\n      filtersAll = {cars}\r\n      ></Filter>               \r\n      \r\n      {cars.map((car, index)=>{\r\n\r\n        if(index >= indexFirstCar && index <= indexLastCar )\r\n        \r\n              \r\n        return(\r\n      \r\n\r\n      \r\n          <CarItem\r\n            key={car.vin} \r\n            id={car.vin}\r\n            carModel= {car.model_variant}\r\n          /> \r\n        \r\n       \r\n        )\r\n      })}    \r\n         \r\n       \r\n\r\n          \r\n\r\n     \r\n      \r\n\r\n      <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n         \r\n          {pageNumbers.map((page, index) => {\r\n          \r\n          return(\r\n            \r\n            <Button\r\n           \r\n            key={index} \r\n            id={index} \r\n            value={page}\r\n            type=\"submit\"\r\n            onClick={handleClick}>\r\n            {page}\r\n\r\n            </Button>\r\n            \r\n          ) \r\n          \r\n          \r\n          }\r\n          )}\r\n          </ButtonGroup>\r\n         <h4>{currentPage}</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarList;","\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {Typography, Container, Paper, Button, makeStyles, Grid} from \"@material-ui/core/\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n});\r\n\r\nconst CarDetail = (props) => {\r\n\r\nconst classes = useStyles();\r\n\r\nlet {id} = useParams();\r\n    \r\nconst [nextVin, setNextVin] = useState(id);\r\nconst [prevVin, setPrevVin] = useState(id);\r\n\r\nconst history = useHistory();\r\n\r\n\r\n\r\n\r\nconst nextCar = () => {\r\n    \r\n\r\n\r\n\r\n  const carIndex = props.cars.findIndex(car => car.vin===id)\r\n    props.cars.map((car, index) => {\r\n        if(index === carIndex +1){\r\n           \r\n            history.push(`/cars/${car.vin}`)\r\n\r\n            \r\n        } \r\n        \r\n    })\r\n    \r\n}\r\n\r\nconst prevCar = () => {\r\n    \r\n    const carIndex = props.cars.findIndex(car => car.vin===id)\r\n      props.cars.map((car, index) => {\r\n          if(index === carIndex -1){\r\n             \r\n            history.push(`/cars/${car.vin}`)\r\n              \r\n          } \r\n          \r\n      })\r\n      \r\n  }\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    setNextVin(nextVin);\r\n})\r\n\r\n    return (\r\n        <div>\r\n                       \r\n                <div>\r\n                <Typography color=\"primary\" variant =\"h3\">Car details</Typography>\r\n\r\n               \r\n            \r\n                    {props.cars.map((car, index) => {\r\n                        if(car.vin === id){\r\n                            \r\n                        return(\r\n                            <div key = {index} id={index}>\r\n                            <Container maxWidth=\"sm\" >\r\n                            <Paper elevation={3} spacing={14} >\r\n                            <Typography color=\"primary\" variant =\"h5\">Car model</Typography>\r\n                            <span>{car.model_variant}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">Fuel type</Typography>\r\n                            <span>{car.fuel_type}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">Engine Size</Typography>\r\n                            <span>{car.engine_size}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">Body type</Typography>\r\n                            <span>{car.body_type}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">Reg number</Typography>\r\n                            <span>{car.regno}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">Doors</Typography>\r\n                            <span>{car.doors}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">Transmission type</Typography>\r\n                            <span>{car.transmission_type}</span>\r\n                            <Typography color=\"primary\" variant =\"h5\">VIN</Typography>\r\n                            <span>{car.vin}</span>\r\n                            </Paper>\r\n                            </Container>\r\n\r\n                            {index!==0 ? \r\n                            \r\n                            <Button  className={classes.btn} onClick={prevCar}><ArrowBackIosIcon/> Previous car</Button> : null}\r\n                            <Link \r\n                            to={`/joes-garage/`}>\r\n                         \r\n                            <Button variant =\"contained\" color=\"primary\">Return to car list</Button>\r\n                            </Link> \r\n\r\n                            \r\n                         \r\n                           {index !== props.cars.length-1 ? \r\n                           \r\n                           \r\n                           <Button className={classes.btn} onClick={nextCar}>Next car <ArrowForwardIosIcon/></Button> \r\n                         \r\n                           :null }\r\n                         \r\n                          \r\n                           \r\n                            </div>\r\n                         \r\n                           \r\n                            );\r\n                        }else return false;\r\n                    })}\r\n                   \r\n                </div>\r\n              \r\n          \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarDetail;","\nimport './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport CarList from './components/CarList';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport CarDetail from \"./components/CarDetail\";\n\n\n\nfunction App() {\n\n  \n\n  const [cars, setCars] = useState([]);\n//fetch API data\n\n  useEffect(()=>{\n    axios.get(\"https://react-challenge-api.azurewebsites.net/vehicles\")\n    .then(response => { \n      setCars(response.data);\n    })\n    .catch(error =>{\n      console.log(error);\n    })\n  }, [])\n  \n\n  return (\n    <Router>\n    <div className=\"App\">\n    \n  \n   \n    \n    <Switch>\n    <Route path=\"/joes-garage\" exact render={() => <CarList  cars={cars} />} />\n    <Route path=\"/cars/:id\" exact render={() => <CarDetail  cars={cars} />} />\n\n  \n    </Switch>\n\n\n \n    </div>\n    </Router>\n   \n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}